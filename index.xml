<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JuananBlog</title>
    <link>https://juanan219.github.io/</link>
    <description>Recent content on JuananBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 10 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://juanan219.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Practica de Auditoria de Bases de Datos</title>
      <link>https://juanan219.github.io/posts/2021/06/practica-de-auditoria-de-bases-de-datos/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/06/practica-de-auditoria-de-bases-de-datos/</guid>
      <description>Activa desde SQLPlus la auditoría de los intentos de acceso fallidos al sistema. Comprueba su funcionamiento.  Oracle, por defecto, tiene las auditorías activadas, así que configuraremos que registre los accesos no válidos ejecutamos la siguiente instrucción
SQL&amp;gt; audit create session whenever not successful; Auditoria terminada correctamente. Realizamos la prueba primero saliendo de la sesión del usuario system y accediendo con una cuenta con la contraseña incorrecta
SQL&amp;gt; disconnect SQL&amp;gt; connect c##juanan1/prueba ERROR: ORA-01017: nombre de usuario/contrase?</description>
    </item>
    
    <item>
      <title>Practica de gestion del almacenamiento en Bases de Datos</title>
      <link>https://juanan219.github.io/posts/2021/06/practica-de-gestion-del-almacenamiento-en-bases-de-datos/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/06/practica-de-gestion-del-almacenamiento-en-bases-de-datos/</guid>
      <description>Esta práctica se va a dividir en tres partes:
  Oracle
  PostgreSQL
  MariaDB
  Oracle  Muestra los espacios de tablas existentes en tu base de datos y la ruta de los ficheros que los componen. ¿Están las extensiones gestionadas localmente o por diccionario?  Para poder ver los tablespaces de nuestro sistema deberemos ejecutar el siguiente comando
SQL&amp;gt; col FILE_NAME form A40; Después ejecutamos esta consulta</description>
    </item>
    
    <item>
      <title>Interconexion de servidores de Bases de Datos</title>
      <link>https://juanan219.github.io/posts/2021/06/interconexion-de-servidores-de-bases-de-datos/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/06/interconexion-de-servidores-de-bases-de-datos/</guid>
      <description>En esta práctica vamos a interconectar diferentes servidores de bases de datos entre sí. Esto sirve para poder acceder a datos que no están almacenados en nuestra base de datos local, puediendo así combinarlos con los datos que ya poseemos.
Vamos a realizar los siguientes puntos:
  Enlace entre dos servidores ORACLE
  Enlace entre dos servidores Postgres
  Enlace entre Oracle y Postgres empleando Heterogeneus Services</description>
    </item>
    
    <item>
      <title>Instalacion y Configuracion de Oracle 19c en CentOs 8</title>
      <link>https://juanan219.github.io/posts/2021/06/instalacion-y-configuracion-de-oracle-19c-en-centos-8/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/06/instalacion-y-configuracion-de-oracle-19c-en-centos-8/</guid>
      <description>En este post voy a explicar como instalar oracle 19c en Linux, concretamente en Centos 8.
Descarga del paquete Nos dirigimos a la página de descarga Oracle y nos descargamos la versión del paquete Linux x86-64 RPM. Esta acción deberemos realizarla desde un entorno gráfico ya que la descarga de la página de Oracle requiere una autentificación con una cuenta de Oracle, por lo que no se va a poder descargar con wget.</description>
    </item>
    
    <item>
      <title>Instalacion y configuracion inicial de OpenLDAP</title>
      <link>https://juanan219.github.io/posts/2021/06/instalacion-y-configuracion-inicial-de-openldap/</link>
      <pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/06/instalacion-y-configuracion-inicial-de-openldap/</guid>
      <description>Vemos si el FQDN está bien configurado  debian@freston:~$ hostname -f freston.juanantonio-reifs.gonzalonazareno.org Ahora vamos a instalar el paquete slapd que es la versión de LDAP más extendida  sudo apt-get update &amp;amp;&amp;amp; sudo apt-get -y install slapd Configuramos la contraseña de administrador y la confirmamos  ┌─────────────────────────┤ Configuring slapd ├──────────────────────────┐ │ Please enter the password for the admin entry in your LDAP directory. │ │ │ │ Administrator password: │ │ │ │ *****_________________________________________________________________ │ │ │ │ &amp;lt;Ok&amp;gt; │ │ │ └────────────────────────────────────────────────────────────────────────┘ Ahora que ha finalizado la instalación de LDAP se nos habrá abierto un socket TCP/IP con el puerto 389 (que es el puerto que usa por defecto LDAP), el cual estará escuchando peticiones por todas las interfaces de la máquina, es decir, por la ip 0.</description>
    </item>
    
    <item>
      <title>Sistema de copias de seguridad</title>
      <link>https://juanan219.github.io/posts/2021/05/sistema-de-copias-de-seguridad/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/05/sistema-de-copias-de-seguridad/</guid>
      <description>Voy a integrar un sistema de copias de seguridad en mi escenario de servidores, para ello voy a instalar y configurar bácula, así que para empezar vamos a explicar qué es bácula y de qué se compone.
¿Qué es bácula? Bácula es un sistema de copias de seguridad, el cual se compone de 3 servicios diferentes:
  Bacula director: Es el servicio que lo controla todo, es decir, el que le dice a cada servicio qué es lo que tiene que hacer.</description>
    </item>
    
    <item>
      <title>Despliegue de un cluster de Kubernetes</title>
      <link>https://juanan219.github.io/posts/2021/05/despliegue-de-un-cluster-de-kubernetes/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/05/despliegue-de-un-cluster-de-kubernetes/</guid>
      <description>Tengo 3 máquinas virtuales (master, nodo1 y nodo2), la máquina master es el controlador y los dos nodos son los workers.
Este escenario lo he montado en vagrant usando virtualbox, aquí está el Vagrantfile
Vagrant.configure(&amp;quot;2&amp;quot;) do |config| config.vm.define :master do |master| master.vm.box = &amp;quot;debian/buster64&amp;quot; master.vm.hostname = &amp;quot;master&amp;quot; master.vm.network :public_network, :bridge=&amp;gt;&amp;quot;eno1&amp;quot; end config.vm.define :nodo1 do |nodo1| nodo1.vm.box = &amp;quot;debian/buster64&amp;quot; nodo1.vm.hostname = &amp;quot;nodo1&amp;quot; nodo1.vm.network :public_network, :bridge=&amp;gt;&amp;quot;eno1&amp;quot; end config.vm.define :nodo2 do |nodo2| nodo2.vm.box = &amp;quot;debian/buster64&amp;quot; nodo2.</description>
    </item>
    
    <item>
      <title>Metricas logs y monitorizacion</title>
      <link>https://juanan219.github.io/posts/2021/04/metricas-logs-y-monitorizacion/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/04/metricas-logs-y-monitorizacion/</guid>
      <description>Descripción del escenario En esta entrada vamos a montar el servicio de recolección de métricas para poder monitorizar nuestros servidores en una infraestructura de red. En esta infraestructura tenemos 4 servidores y 2 redes:
 Red 1 (10.0.1.0/24):  En esta red tenemos a:
  Dulcinea (Debian): Hace la función de router y cortafuegos.
  Sancho (Ubuntu): Es un servidor que solo tiene instalados gestores de bases de datos.</description>
    </item>
    
    <item>
      <title>Apuntes de Libvirt</title>
      <link>https://juanan219.github.io/posts/2021/03/apuntes-de-libvirt/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/03/apuntes-de-libvirt/</guid>
      <description>Libvirt es una API de virtualizacion que se usa con KVM o Qemu KVM (el sistema de virtualización nativo de Linux).
Instalación Para instalar libvirt deberemos instalar los siguientes paquetes
sudo apt-get install qemu-kvm libvirt-daemon-system Explicación de los paquetes:
  qemu-kvm: Proporciona la virtualización para x86
  libvirt-daemon-system: Es el demonio de libvirt, el cual hace accesible la API a través de un socket UNIX (aunque se puede configurar para acceder a través de un socket TCP).</description>
    </item>
    
    <item>
      <title>Practica VPN</title>
      <link>https://juanan219.github.io/posts/2021/03/practica-vpn/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/03/practica-vpn/</guid>
      <description>Tarea1: VPN de acceso remoto con OpenVNP y certificados x509 En esta tarea vamos a montar una VPN con OpenVPN con certificados x509 generados usando la herramienta easy-rsa, para ello vamos a hacer el uso de 3 máquinas:
 Mi máquina personal (Cliente) Servidor (Servidor VPN) Máquina de la red interna (Máquina a la que nos vamos a conectar)  Instalación de las herramientas Para realizar esta tarea vamos a necesitar instalar OpenVPN tanto en mi máquina como en el servidor</description>
    </item>
    
  </channel>
</rss>
