<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Practica on JuananBlog</title>
    <link>https://juanan219.github.io/tags/practica/</link>
    <description>Recent content in Practica on JuananBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 16 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://juanan219.github.io/tags/practica/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Practica VPN</title>
      <link>https://juanan219.github.io/posts/2021/03/practica-vpn/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/03/practica-vpn/</guid>
      <description>Tarea1: VPN de acceso remoto con OpenVNP y certificados x509 En esta tarea vamos a montar una VPN con OpenVPN con certificados x509 generados usando la herramienta easy-rsa, para ello vamos a hacer el uso de 3 máquinas:
 Mi máquina personal (Cliente) Servidor (Servidor VPN) Máquina de la red interna (Máquina a la que nos vamos a conectar)  Instalación de las herramientas Para realizar esta tarea vamos a necesitar instalar OpenVPN tanto en mi máquina como en el servidor</description>
    </item>
    
    <item>
      <title>Implantación de aplicaciones web PHP en Docker</title>
      <link>https://juanan219.github.io/posts/2021/03/implantaci%C3%B3n-de-aplicaciones-web-php-en-docker/</link>
      <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/03/implantaci%C3%B3n-de-aplicaciones-web-php-en-docker/</guid>
      <description>Tarea 1  Crea un script con docker-compose que levante el escenario con los dos contenedores.(Usuario: admin, contraseña: admin).  Para levantar la aplicación web bookmedik necesitaremos un contenedor con la imagen de mariadb en el cual vamos a crear un usuario llamado book_user con una contraseña book_passwd, una base de datos llamada bookmedik y le vamos a volcar el contenido del fichero schema.sql del repositorio de GitHub de bookmedik, del cual, vamos a eliminar la primera línea para que no nos de conflicto a la hora de ejecutar el script.</description>
    </item>
    
    <item>
      <title>Practica iSCSI</title>
      <link>https://juanan219.github.io/posts/2021/02/practica-iscsi/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://juanan219.github.io/posts/2021/02/practica-iscsi/</guid>
      <description>Creación de targets en Linux Primero vamos a crear un target con una LUN, para ello primero vamos a instalar el paquete tgt en el servidor
sudo apt-get install tgt Ahora vamos a definir dos targets, uno para un cliente Linux y otro para un cliente Windows. Para definirlos de forma persistente, deberemos editar el fichero /etc/tgt/targets.conf y reiniciamos el servicio tgt
sudo nano etc/tgt/targets.conf [...] &amp;lt;target iqn.2021-02.es.juanan:target1&amp;gt; backing-store /dev/sdb &amp;lt;/target&amp;gt; &amp;lt;target iqn.</description>
    </item>
    
  </channel>
</rss>
